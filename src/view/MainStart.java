package view;

import com.intellij.uiDesigner.core.*;

import javax.swing.*;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Locale;

public class MainStart extends JFrame {
    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables  @formatter:off
    // Generated using JFormDesigner Evaluation license - unknown
    private JPanel panel1;
    private JLabel RPGJavaLabel;
    private JLabel TowerJLabel;
    private JButton JOGARButton;
    private JButton SAIRButton;

    public MainStart() {
        setTitle("RPG JAVA");
        setSize(1000, 800);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setContentPane(panel1);

        JOGARButton.addActionListener(e -> {
            ConfigGame configGame = new ConfigGame();
            configGame.setVisible(true);
        });

        SAIRButton.addActionListener(e -> System.exit(0));
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
$$$setupUI$$$();
} /** Method generated by IntelliJ IDEA GUI Designer
 * >>> IMPORTANT!! <<<
 * DO NOT edit this method OR call it in your code!
 * @noinspection ALL
 */
private void $$$setupUI$$$()
{
panel1=new JPanel();
panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3,3,new Insets(0,0,0,50),-1,-1));
panel1.setBackground(new Color(-16777216));
RPGJavaLabel=new JLabel();
RPGJavaLabel.setBackground(new Color(-852737));
Font RPGJavaLabelFont = this.$$$getFont$$$("JetBrains Mono NL",Font.BOLD,28,RPGJavaLabel.getFont());
if (RPGJavaLabelFont != null) RPGJavaLabel.setFont(RPGJavaLabelFont);
RPGJavaLabel.setText("RPG Java");
panel1.add(RPGJavaLabel,new com.intellij.uiDesigner.core.GridConstraints(0,0,1,3,com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,null,null,null,0,false));
final com.intellij.uiDesigner.core.Spacer spacer1=new com.intellij.uiDesigner.core.Spacer();
panel1.add(spacer1,new com.intellij.uiDesigner.core.GridConstraints(1,2,2,1,com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL,1,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW,null,null,null,0,false));
TowerJLabel=new JLabel();
TowerJLabel.setIcon(new ImageIcon(getClass().getResource("/resources/images/pixelTower.png")));
TowerJLabel.setText("");
panel1.add(TowerJLabel,new com.intellij.uiDesigner.core.GridConstraints(1,0,2,1,com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST,com.intellij.uiDesigner.core.GridConstraints.FILL_NONE,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,null,null,null,0,false));
JOGARButton=new JButton();
JOGARButton.setText("JOGAR");
panel1.add(JOGARButton,new com.intellij.uiDesigner.core.GridConstraints(1,1,1,1,com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK|com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,null,null,null,0,false));
SAIRButton=new JButton();
SAIRButton.setText("SAIR");
panel1.add(SAIRButton,new com.intellij.uiDesigner.core.GridConstraints(2,1,1,1,com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER,com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK|com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW,com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED,null,null,null,0,false));
} /** @noinspection ALL */ private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {if (currentFont == null) return null;String resultName;if (fontName == null) {resultName = currentFont.getName();}else {  Font testFont = new Font(fontName, Font.PLAIN, 10);  if (testFont.canDisplay('a') && testFont.canDisplay('1')) {resultName = fontName;}  else {resultName = currentFont.getName();}}Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");Font fontWithFallback = isMac? new Font(font.getFamily(), font.getStyle(), font.getSize()): new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);} /** @noinspection ALL */ public JComponent $$$getRootComponent$$$() { return panel1; }

    // JFormDesigner - End of variables declaration  //GEN-END:variables  @formatter:on
}
